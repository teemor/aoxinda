{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["var ElementType = require(\"domelementtype\"),\n    DomUtils = module.exports;\n\nfunction find(test, arr, recurse, limit){\n\tvar result = [], childs;\n\n\tfor(var i = 0, j = arr.length; i < j; i++){\n\t\tif(test(arr[i])){\n\t\t\tresult.push(arr[i]);\n\t\t\tif(--limit <= 0) break;\n\t\t}\n\n\t\tchilds = arr[i].children;\n\t\tif(recurse && childs && childs.length > 0){\n\t\t\tchilds = find(test, childs, recurse, limit);\n\t\t\tresult = result.concat(childs);\n\t\t\tlimit -= childs.length;\n\t\t\tif(limit <= 0) break;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction findOne(test, arr, recurse){\n\tfor(var i = 0, l = arr.length; i < l; i++){\n\t\tif(test(arr[i])) return arr[i];\n\t\tif(recurse && arr[i].children && arr[i].children.length > 0){\n\t\t\tvar elem = findOne(test, arr[i].children, true);\n\t\t\tif(elem) return elem;\n\t\t}\n\t}\n\treturn null;\n}\n\nfunction findAll(test, arr){\n\treturn arr.reduce(function(arr, elem){\n\t\tif(elem.children && elem.children.length > 0){\n\t\t\treturn arr.concat(findAll(test, elem.children));\n\t\t} else {\n\t\t\treturn arr;\n\t\t}\n\t}, arr.filter(test));\n}\n\nvar isTag = DomUtils.isTag = function(elem){\n\treturn elem.type === ElementType.Tag || elem.type === ElementType.Script || elem.type === ElementType.Style;\n};\n\nfunction filter(test, element, recurse, limit){\n\tif(!Array.isArray(element)) element = [element];\n\n\tif(typeof limit !== \"number\" || limit === Infinity){\n\t\tif(recurse === false){\n\t\t\treturn element.filter(test);\n\t\t} else {\n\t\t\treturn findAll(test, element);\n\t\t}\n\t} else if(limit === 1){\n\t\telement = findOne(test, element, recurse !== false);\n\t\treturn element ? [element] : [];\n\t} else {\n\t\treturn find(test, element, recurse !== false, limit);\n\t}\n}\n\nDomUtils.filter = filter;\n\nDomUtils.testElement = function(options, element){\n\tfor(var key in options){\n\t\tif(!options.hasOwnProperty(key));\n\t\telse if(key === \"tag_name\"){\n\t\t    if(!isTag(element) || !options.tag_name(element.name)){\n\t\t\t\treturn false;\n\t\t    }\n\t\t} else if(key === \"tag_type\"){\n\t\t    if(!options.tag_type(element.type)) return false;\n\t\t} else if(key === \"tag_contains\"){\n\t\t    if(isTag(element) || !options.tag_contains(element.data)){\n\t\t\t\treturn false;\n\t\t    }\n\t\t} else if(!element.attribs || !options[key](element.attribs[key])){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\nvar Checks = {\n\ttag_name: function(name){\n\t\tif(typeof name === \"function\"){ \n\t\t\treturn function(elem){ return isTag(elem) && name(elem.name); };\n\t\t} else if(name === \"*\"){\n\t\t\treturn isTag;\n\t\t} else {\n\t\t\treturn function(elem){ return isTag(elem) && elem.name === name; };\n\t\t}\n\t},\n\ttag_type: function(type){\n\t\tif(typeof type === \"function\"){\n\t\t\treturn function(elem){ return type(elem.type); };\n\t\t} else {\n\t\t\treturn function(elem){ return elem.type === type; };\n\t\t}\n\t},\n\ttag_contains: function(data){\n\t\tif(typeof type === \"function\"){\n\t\t\treturn function(elem){ return !isTag(elem) && data(elem.data); };\n\t\t} else {\n\t\t\treturn function(elem){ return !isTag(elem) && elem.data === data; };\n\t\t}\n\t}\n};\n\nfunction getAttribCheck(attrib, value){\n\tif(typeof value === \"function\"){\n\t\treturn function(elem){ return elem.attribs && value(elem.attribs[attrib]); };\n\t} else {\n\t\treturn function(elem){ return elem.attribs && elem.attribs[attrib] === value; };\n\t}\n}\n\nDomUtils.getElements = function(options, element, recurse, limit){\n\tvar funcs = [];\n\tfor(var key in options){\n\t\tif(options.hasOwnProperty(key)){\n\t\t\tif(key in Checks) funcs.push(Checks[key](options[key]));\n\t\t\telse funcs.push(getAttribCheck(key, options[key]));\n\t\t}\n\t}\n\n\tif(funcs.length === 0) return [];\n\tif(funcs.length === 1) return filter(funcs[0], element, recurse, limit);\n\treturn filter(\n\t\tfunction(elem){\n\t\t\treturn funcs.some(function(func){ return func(elem); });\n\t\t},\n\t\telement, recurse, limit\n\t);\n};\n\nDomUtils.getElementById = function(id, element, recurse){\n\tif(!Array.isArray(element)) element = [element];\n\treturn findOne(getAttribCheck(\"id\", id), element, recurse !== false);\n};\n\nDomUtils.getElementsByTagName = function(name, element, recurse, limit){\n\treturn filter(Checks.tag_name(name), element, recurse, limit);\n};\n\nDomUtils.getElementsByTagType = function(type, element, recurse, limit){\n\treturn filter(Checks.tag_type(type), element, recurse, limit);\n};\n\nDomUtils.removeElement = function(elem){\n\tif(elem.prev) elem.prev.next = elem.next;\n\tif(elem.next) elem.next.prev = elem.prev;\n\n\tif(elem.parent){\n\t\telem.parent.children.splice(elem.parent.children.lastIndexOf(elem), 1);\n\t}\n};\n\nDomUtils.getInnerHTML = function(elem){\n\tif(!elem.children) return \"\";\n\n\tvar childs = elem.children,\n\t\tchildNum = childs.length,\n\t\tret = \"\";\n\n\tfor(var i = 0; i < childNum; i++){\n\t\tret += DomUtils.getOuterHTML(childs[i]);\n\t}\n\n\treturn ret;\n};\n\n//boolean attributes without a value (taken from MatthewMueller/cheerio)\nvar booleanAttribs = {\n\t__proto__: null,\n\tasync: true,\n\tautofocus: true,\n\tautoplay: true,\n\tchecked: true,\n\tcontrols: true,\n\tdefer: true,\n\tdisabled: true,\n\thidden: true,\n\tloop: true,\n\tmultiple: true,\n\topen: true,\n\treadonly: true,\n\trequired: true,\n\tscoped: true,\n\tselected: true,\n\t\"/\": true //TODO when is this required?\n};\n\nDomUtils.getOuterHTML = function(elem){\n\tvar type = elem.type;\n\n\tif(type === ElementType.Text) return elem.data;\n\tif(type === ElementType.Comment) return \"<!--\" + elem.data + \"-->\";\n\tif(type === ElementType.Directive) return \"<\" + elem.data + \">\";\n\tif(type === ElementType.CDATA) return \"<!CDATA \" + elem.data + \"]]>\";\n\n\tvar ret = \"<\" + elem.name;\n\tif(\"attribs\" in elem){\n\t\tfor(var attr in elem.attribs){\n\t\t\tif(elem.attribs.hasOwnProperty(attr)){\n\t\t\t\tret += \" \" + attr;\n\t\t\t\tvar value = elem.attribs[attr];\n\t\t\t\tif(!value){\n\t\t\t\t\tif( !(attr in booleanAttribs) ){\n\t\t\t\t\t\tret += '=\"\"';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tret += '=\"' + value + '\"';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ret + \">\" + DomUtils.getInnerHTML(elem) + \"</\" + elem.name + \">\";\n};"]}